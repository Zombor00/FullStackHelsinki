{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handler","value","onChange","PersonForm","newName","newNumber","addPerson","handleNameChange","handleNumberChange","onSubmit","type","Person","person","delPerson","name","number","onClick","Persons","persons","includes","map","baseUrl","obj","getAll","axios","get","create","newObject","post","update","id","console","log","put","del","delete","Notification","message","error","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","notifMessage","setNotifMessage","errorNot","setErrorNot","useEffect","personsService","then","response","data","length","event","target","preventDefault","duplicatePerson","find","window","alert","confirm","nameObject","changedPersons","indexOf","setTimeout","catch","pers","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49cc086c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filter, handler }) => {\r\n    return (\r\n        <div>\r\n          filter shown with <input\r\n                value={filter}\r\n                onChange={handler}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({ newName, newNumber, addPerson, handleNameChange, handleNumberChange }) => {\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n\r\n            <div>\r\n          name: <input\r\n                    value={newName}\r\n                    onChange={handleNameChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n          number: <input\r\n                    value={newNumber}\r\n                    onChange={handleNumberChange}\r\n                />\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, delPerson }) => {\r\n    return (\r\n        <div>\r\n            {person.name} {person.number} &nbsp;\r\n            <button onClick={() => delPerson(person)}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Persons = ({ filter, persons, delPerson }) => {\r\n    return (\r\n        <div>\r\n            {persons\r\n                .filter(person =>\r\n                    person.name.includes(filter))\r\n                .map(person =>\r\n                    <div key={person.name}>\r\n                        <Person person={person} delPerson={delPerson}/>\r\n                    </div>\r\n                )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    console.log(id)\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nconst del = (person) => {\r\n    return axios.delete(`${baseUrl}/${person.id}`)\r\n}\r\n\r\nconst obj = { getAll, create, update, del }\r\nexport default obj","import React from 'react'\r\n\r\nconst Notification = ({ message , error }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    if(error){\r\n        return(\r\n            <div className=\"error\">\r\n                {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"notif\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport personsService from './services/persons'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n    const [ persons, setPersons] = useState([])\r\n    const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n    const [ filter, setFilter ] = useState('')\r\n    const [ notifMessage, setNotifMessage] = useState(null)\r\n    const [ errorNot, setErrorNot] = useState(false)\r\n\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        const duplicatePerson = persons.find(person => person.name === newName)\r\n        if(typeof(duplicatePerson) !== 'undefined'){\r\n            if(duplicatePerson.number === newNumber){\r\n                window.alert(`${newName} is already added to the phonebook with the same number`)\r\n            }else{\r\n                if(window.confirm(`${newName} is already added to the phonebook, \r\n        replace the old number with a new one?`)){\r\n\r\n                    const nameObject = {\r\n                        name: newName,\r\n                        number: newNumber\r\n                    }\r\n                    personsService\r\n                        .update(duplicatePerson.id, nameObject)\r\n                        .then(() => {\r\n                            const changedPersons = [ ...persons]\r\n                            changedPersons[changedPersons.indexOf(duplicatePerson)].number = newNumber\r\n                            setPersons(changedPersons)\r\n                            setErrorNot(false)\r\n                            setNotifMessage(`Updated phonenumber of  ${newName} to ${newNumber}`)\r\n                            setTimeout(() => {\r\n                                setNotifMessage(null)\r\n                            }, 4000)\r\n                        })\r\n                        .catch(() => {\r\n                            setErrorNot(true)\r\n                            setNotifMessage(`Information of ${duplicatePerson.name} has already been removed`)\r\n                            setPersons(persons.filter(pers => pers.id !== duplicatePerson.id))\r\n                        })\r\n                }\r\n            }\r\n        }else{\r\n            const nameObject = {\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personsService\r\n                .create(nameObject)\r\n                .then(response => {\r\n                    console.log(response)\r\n                    setPersons(persons.concat(response.data))\r\n                    setErrorNot(false)\r\n                    setNotifMessage(`Added ${newName}`)\r\n                    setTimeout(() => {\r\n                        setNotifMessage(null)\r\n                    }, 4000)\r\n                })\r\n        }\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    const delPerson = (person) => {\r\n        if(window.confirm(`Delete ${person.name} ?`)){\r\n            personsService\r\n                .del(person)\r\n                .then(response => {\r\n                    console.log(response)\r\n                })\r\n            setPersons(persons.filter(pers => pers.id !== person.id))\r\n        }\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('effect')\r\n        personsService\r\n            .getAll()\r\n            .then(response => {\r\n                console.log('promise fulfilled')\r\n                setPersons(response.data)\r\n            })\r\n    }, [])\r\n    console.log('render', persons.length, 'persons')\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification message={notifMessage} error={errorNot}/>\r\n\r\n            <Filter filter={filter} handler={handleFilterChange}/>\r\n\r\n            <h2>Add a new</h2>\r\n            <PersonForm\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                addPerson={addPerson}\r\n                handleNameChange={handleNameChange}\r\n                handleNumberChange={handleNumberChange}\r\n            />\r\n\r\n            <h2>Numbers</h2>\r\n            <Persons filter={filter} persons={persons} delPerson={delPerson}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}