{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thezo\\\\OneDrive\\\\Documentos\\\\FullStackHelsinki\\\\part5\\\\bloglist-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Blog from './components/Blog';\nimport BlogForm from './components/BlogForm';\nimport LoginForm from './components/LoginForm';\nimport Notification from './components/Notification';\nimport Togglable from './components/Togglable';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState(null);\n  const [error, setError] = useState(false);\n  const blogFormRef = useRef();\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n    console.log(\"patata\");\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      blogService.setToken(user.token);\n    } catch (exception) {\n      setError(true);\n      setMessage('Wrong username or password');\n      setTimeout(() => {\n        setMessage(null);\n        setError(false);\n      }, 5000);\n    }\n\n    console.log('logging in with', username, password);\n  };\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n    blogService.setToken(null);\n  };\n\n  const handleCreate = async blog => {\n    blog.user = user.id;\n\n    try {\n      const newBlog = await blogService.create(blog);\n      setBlogs(blogs.concat(newBlog));\n      setError(false);\n      setMessage(`a new blog ${newBlog.title} by ${newBlog.author} added`);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    } catch (exception) {\n      setError(true);\n      setMessage('Error when creating the blog');\n      setTimeout(() => {\n        setError(false);\n        setMessage(null);\n      }, 5000);\n    }\n  };\n\n  const userLogged = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [user.name, \" logged-in\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogout(),\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Togglable, {\n      buttonLabel: \"new blog  \",\n      children: /*#__PURE__*/_jsxDEV(BlogForm, {\n        handleCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: message,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), user === null ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LoginForm, {\n        username: username,\n        password: password,\n        handleUsernameChange: ({\n          target\n        }) => setUsername(target.value),\n        handlePasswordChange: ({\n          target\n        }) => setPassword(target.value),\n        handleLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: userLogged()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"lwPUkTnjsOXlkeWIkJ4Y4lGVtp8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/thezo/OneDrive/Documentos/FullStackHelsinki/part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","useRef","Blog","BlogForm","LoginForm","Notification","Togglable","blogService","loginService","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","message","setMessage","error","setError","blogFormRef","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","console","log","login","setItem","stringify","exception","setTimeout","handleLogout","removeItem","handleCreate","blog","id","newBlog","create","concat","title","author","userLogged","name","map","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport Blog from './components/Blog'\r\nimport BlogForm from './components/BlogForm'\r\nimport LoginForm from './components/LoginForm'\r\nimport Notification from './components/Notification'\r\nimport Togglable from './components/Togglable'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('') \r\n  const [user, setUser] = useState(null)\r\n  const [message, setMessage] = useState(null)\r\n  const [error, setError] = useState(false)\r\n  const blogFormRef = useRef()\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    console.log(\"patata\")\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      ) \r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      blogService.setToken(user.token)\r\n    } catch (exception) {\r\n      setError(true)\r\n      setMessage('Wrong username or password')\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n        setError(false)\r\n      }, 5000)\r\n    }\r\n\r\n    console.log('logging in with', username, password)\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n    blogService.setToken(null)\r\n  }\r\n\r\n  const handleCreate = async (blog) => {\r\n\r\n    blog.user = user.id\r\n\r\n    try {\r\n      const newBlog = await blogService.create(blog)\r\n      setBlogs(blogs.concat(newBlog))\r\n      setError(false)\r\n      setMessage(`a new blog ${newBlog.title} by ${newBlog.author} added`)\r\n      setTimeout(() => {\r\n        setMessage(null)\r\n      }, 5000)\r\n\r\n    } catch (exception) {\r\n      setError(true)\r\n      setMessage('Error when creating the blog')\r\n      setTimeout(() => {\r\n        setError(false)\r\n        setMessage(null)\r\n      }, 5000)\r\n    }\r\n\r\n  }\r\n\r\n  const userLogged = () => (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <p>{user.name} logged-in\r\n      <button onClick={() => handleLogout()}>logout</button>\r\n      </p>\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n      <Togglable buttonLabel=\"new blog  \">\r\n        <BlogForm handleCreate={handleCreate} />\r\n      </Togglable>\r\n      \r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={message} error={error} />\r\n\r\n      {user === null ?\r\n      <div>\r\n        <LoginForm\r\n          username={username}\r\n          password={password}\r\n          handleUsernameChange={({ target }) => setUsername(target.value)}\r\n          handlePasswordChange={({ target }) => setPassword(target.value)}\r\n          handleLogin={handleLogin}\r\n        />\r\n      </div>\r\n      :\r\n      <div>\r\n        {userLogged()}\r\n      </div>\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}