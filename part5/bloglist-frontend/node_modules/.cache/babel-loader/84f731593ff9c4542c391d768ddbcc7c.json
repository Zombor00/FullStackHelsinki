{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thezo\\\\OneDrive\\\\Documentos\\\\FullStackHelsinki\\\\part5\\\\bloglist-frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      blogService.setToken(user.token);\n    } catch (exception) {\n      setErrorMessage('Wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n    }\n\n    console.log('logging in with', username, password);\n  };\n\n  const handleLogout = async () => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    setUser(null);\n    blogService.setToken(null);\n  };\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        name: \"Username\",\n        onChange: ({\n          target\n        }) => setUsername(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        name: \"Password\",\n        onChange: ({\n          target\n        }) => setPassword(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n\n  const createBlogForm = () => /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        name: \"Username\",\n        onChange: ({\n          target\n        }) => setUsername(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        name: \"Password\",\n        onChange: ({\n          target\n        }) => setPassword(target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n\n  const blogsAndUser = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLogout(),\n      children: \"logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), blogs.map(blog => /*#__PURE__*/_jsxDEV(Blog, {\n      blog: blog\n    }, blog.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged-in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), blogsAndUser()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"K3d219gWzH9KF2a9fBLGvAtoWS0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/thezo/OneDrive/Documentos/FullStackHelsinki/part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","Notification","blogService","loginService","App","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","errorMessage","setErrorMessage","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","exception","setTimeout","console","log","handleLogout","removeItem","loginForm","target","value","createBlogForm","blogsAndUser","map","blog","id","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport Notification from './components/Notification'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\nimport './index.css'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [username, setUsername] = useState('') \r\n  const [password, setPassword] = useState('') \r\n  const [user, setUser] = useState(null)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      ) \r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n      blogService.setToken(user.token)\r\n    } catch (exception) {\r\n      setErrorMessage('Wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n\r\n    console.log('logging in with', username, password)\r\n  }\r\n\r\n  const handleLogout = async () => {\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n    setUser(null)\r\n    blogService.setToken(null)\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>      \r\n  )\r\n\r\n  const createBlogForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>      \r\n  )\r\n\r\n  const blogsAndUser = () => (\r\n    <div>\r\n      <h2>blogs</h2>\r\n      <button onClick={() => handleLogout()}>logout</button>\r\n      {blogs.map(blog =>\r\n        <Blog key={blog.id} blog={blog} />\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <Notification message={errorMessage} />\r\n\r\n      {user === null ?\r\n      loginForm() :\r\n      <div>\r\n        <p>{user.name} logged-in</p>\r\n        {blogsAndUser()}\r\n      </div>\r\n    }\r\n\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}